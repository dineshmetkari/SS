package com.stackroute.dataLoader;

import org.neo4j.driver.v1.Driver;
import org.redisson.api.RBucket;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.ApplicationListener;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.stereotype.Component;

import com.stackroute.redisson.Neo4jConceptNlpModel;


@Component
public class DataLoaderConceptNlp implements ApplicationListener<ContextRefreshedEvent>  {


	private Driver driver;

	@Value("${uri}")
	String uri;
	@Value("${username}")
	String user;
	@Value("${password}")
	String password;
	@Value("${redisHost}")
	String redisHost;

	@Autowired
	private Neo4jConceptNlpModel neo4jConceptNlpModel;

	private RBucket<Neo4jConceptNlpModel> bucket;



	public RBucket<Neo4jConceptNlpModel> getBucket() {
		return bucket;
	}



	public void setBucket(RBucket<Neo4jConceptNlpModel> bucket) {
		this.bucket = bucket;
	}



	@Override
	public void onApplicationEvent(ContextRefreshedEvent event) {
		// TODO Auto-generated method stub

		System.out.println("ApplicationListener Invoked At Spring Container Startup for ConceptList");
		String Query = "Match(w:Word)-[Is_A]->(i:Intent) return w.name as term, i.name as intent, w.weight as weight";

	}

}
